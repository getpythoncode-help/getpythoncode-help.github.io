[
  {
    "Week-4: Programing Assignment-01": " #include &lt;stdio.h&gt;\n\nint main() {\n    int arraySize, searchValue, positionFound = -1;\n    int numberArray[20]; // limit as per constraint\n    int loopIndex;\n\n    // Read the size of the array\n    scanf(\"%d\", &arraySize);\n\n    // Read array elements\n    for (loopIndex = 0; loopIndex < arraySize; loopIndex++) {\n        scanf(\"%d\", &numberArray[loopIndex]);\n    }\n\n    // Read the search value\n    scanf(\"%d\", &searchValue);\n\n    // Search for first occurrence\n    for (loopIndex = 0; loopIndex < arraySize; loopIndex++) {\n        if (numberArray[loopIndex] == searchValue) {\n            positionFound = loopIndex;\n            break;\n        }\n    }\n\n    // Output the result\n    printf(\"%d\", positionFound);\n\n    return 0;\n}\n",
    "Week-4: Programing Assignment-02": " #include &lt;stdio.h&gt;\n\nint main() {\n    int arraySize, searchValue;\n    int numberArray[20]; // limit as per constraint\n    int loopIndex, occurrenceCount = 0;\n\n    // Read the size of the array\n    scanf(\"%d\", &arraySize);\n\n    // Read array elements\n    for (loopIndex = 0; loopIndex < arraySize; loopIndex++) {\n        scanf(\"%d\", &numberArray[loopIndex]);\n    }\n\n    // Read the value to count\n    scanf(\"%d\", &searchValue);\n\n    // Count occurrences\n    for (loopIndex = 0; loopIndex < arraySize; loopIndex++) {\n        if (numberArray[loopIndex] == searchValue) {\n            occurrenceCount++;\n        }\n    }\n\n    // Output the result\n    printf(\"%d\", occurrenceCount);\n\n    return 0;\n}\n",
    "Week-4: Programing Assignment-03": " #include &lt;stdio.h&gt;\n\nint main() {\n    int arraySize;\n    char firstString[21], secondString[21]; // +1 for null terminator\n    int letterCount1[26] = {0}, letterCount2[26] = {0};\n    int loopIndex, isAnagram = 1;\n\n    // Read size of character arrays\n    scanf(\"%d\", &arraySize);\n\n    // Read first string\n    scanf(\"%s\", firstString);\n\n    // Read second string\n    scanf(\"%s\", secondString);\n\n    // Count frequency of each letter in first string\n    for (loopIndex = 0; loopIndex < arraySize; loopIndex++) {\n        letterCount1[firstString[loopIndex] - 'A']++;\n    }\n\n    // Count frequency of each letter in second string\n    for (loopIndex = 0; loopIndex < arraySize; loopIndex++) {\n        letterCount2[secondString[loopIndex] - 'A']++;\n    }\n\n    // Compare frequency counts\n    for (loopIndex = 0; loopIndex < 26; loopIndex++) {\n        if (letterCount1[loopIndex] != letterCount2[loopIndex]) {\n            isAnagram = 0;\n            break;\n        }\n    }\n\n    // Output result\n    printf(\"%d\", isAnagram);\n\n    return 0;\n}\n"
  },
  {
    "Week-5 Programing Assignment-01": "#include &lt;stdio.h&gt;\n\nvoid reverse() {\n    int cgp = getchar();  // read one character\n    if (cgp != EOF && cgp != '\\n') {\n        reverse();      // recursive call before printing\n        putchar(cgp);     // print when stack unwinds\n    }\n}\n\nint main() {\n    reverse();   // call recursive function\n    return 0;\n}\n ",
    "Week-5 Programing Assignment-02": " #include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid genBinary(char *s, int i, int N) {\n    if (i == N) {\n        s[N] = '\\0';\n        printf(\"%s\\n\", s);\n        return;\n    }\n\n    // First choice: put '0'\n    s[i] = '0';\n    genBinary(s, i + 1, N);\n\n    // Second choice: put '1'\n    s[i] = '1';\n    genBinary(s, i + 1, N);\n}\n\nint main(void) {\n    char A[8];\n    int ntg;\n    scanf(\"%d\", &ntg);\n\n    genBinary(A, 0, ntg);\n\n    return 0;\n}\n",
    "Week-5 Programing Assignment-03": "#include &lt;stdio.h&gt;\n\n// Recursive function to compute BlockSum\nint blockSum(int *M, int nok) {\n    if (nok == 2) {\n        return M[0] - M[1];  // base case\n    }\n    int mid = nok / 2;\n    int left = blockSum(M, mid);         // first half\n    int right = blockSum(M + mid, mid);  // second half\n    return left - right;                 // recursive step\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n\n    int M[1024];  // max size as per problem constraint\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &M[i]);\n    }\n\n    int result = blockSum(M, n);\n    printf(\"%d\", result);\n\n    return 0;\n}\n "
  },
  {
    "Week-3 Programing Assignment-01": " #include &lt;stdio.h&gt;\n\nint main() {\n    int totalCount, C_v, maxValue;\n    scanf(\"%d\", &totalCount);\n\n    scanf(\"%d\", &C_v);\n    maxValue = C_v;\n\n    for (int index = 1; index < totalCount; index++) {\n        scanf(\"%d\", &C_v);\n        if (C_v > maxValue) {\n            maxValue = C_v;\n        }\n    }\n\n    printf(\"%d\", maxValue);\n    return 0;\n}\n ",
    "Week-3 Programing Assignment-02": " #include &lt;stdio.h&gt;\n\n\nint is_prime(int n) {\n    if (n <= 1) return 0;\n    for (int j = 2; j * j <= n; j++) {\n        if (n % j == 0) return 0;\n    }\n    return 1;\n}\n\nint main() {\n    int n, num;\n    scanf(\"%d\", &n);\n  \n    int flag = 0;\n  \n    for (int in = 0; in < n; in++) {\n        scanf(\"%d\", &num);\n        \n        if (is_prime(num)) {\n            if (flag == 0) {\n                printf(\"%d\", num);\n                flag = 1;     \n            } else {\n                printf(\" %d\", num);\n            }\n        }\n    }\n\n    return 0;\n}\n",
    "Week-3 Programing Assignment-03": " #include &lt;stdio.h&gt;\n\nint main() {\n    char inputChar123;\n    scanf(\"%c\", &inputChar123);\n\n    char shiftedChar = ((inputChar123 - 'a' + 3) % 26) + 'a';\n\n    printf(\"%c\", shiftedChar);\n\n    return 0;\n}\n"
  }
]


