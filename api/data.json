[
  {
    "Week-11: Programing Assignment-01": " char* reverse(char str[])\n{\n    static int rcb= 0;\n    static char rev[MAX];\n    if (*str)\n    {\n        reverse(str+1);\n        rev[rcb++]= *str;\n    }\n    return rev;\n} \n",
    "Week-11: Programing Assignment-02": " int ipl,j;\nfloat b, c, k =0;\nfor(ipl=0; ipl < 5; ipl++)\n   {\n      b=1;\n      c=1;\n      for(j=0; j < 5; j++)\n        {\n           if(j!=ipl)\n             {\n               b=b*(a-t[j]);\n               c=c*(t[ipl]-t[j]);\n              }\n            }\n        k=k+((b/c)*v[ipl]);\n        } \n\n\n\n\n",
    "Week-11: Programing Assignment-03": " int hi;\nfloat hg,x, sum=0;  \nif(b  >  a)\n  hg=(b-a)/n;\n  else\n  hg=-(b-a)/n;\n  for(hi=1;hi <  n;hi++){\n    x=a+hi*hg;\n    sum=sum+func(x);\n  }\n  integral=(hg/2)*(func(a)+func(b)+2*sum);\n  printf(\"The integral is: %0.6f\",integral);\n  return 0;\n}\nfloat func(float x)\n{\n  return x*x;\n}",
    "Week-11: Programing Assignment-04": "  int checkPrime(int num, int user_give_num)\n{\n    if (user_give_num == 1)\n    {\n        return 1;\n    }\n    else\n    {\n       if (num % user_give_num == 0)\n       {\n         return 0;\n       }\n       else\n       {\n         return checkPrime(num, user_give_num - 1);\n       }\n    }\n}\n"
  },
  {
    "Week-12: Programing Assignment-01": "void findFact(int n, long int *ft)\n\t\t{\n        int i;\n\n       *ft =1; \n       for(i=1;i <= n;i++)\n       *ft=*ft*i;\n       } ",
    "Week-12: Programing Assignment-02": "struct student temp;\nint jp;\nfor(i=0;i < n-1;i++)\n  {\n  for(jp=0;jp < n-1;jp++)\n    {\n    if(s[jp].score < s[jp+1].score)\n    {\n    temp=s[jp];\n    s[jp]=s[jp+1];\n    s[jp+1]=temp;\n    }\n  }\n} ",
    "Week-12: Programing Assignment-03": "element = (float*) calloc(n, sizeof(float));\n\n    if(element == NULL)\n    {\n        printf(\"Error!!! memory not allocated.\");\n        exit(0);\n    }\n\n    // Stores the number entered by the user.\n    int fi;\n    for(fi = 0; fi < n; ++fi)\n    {\n        scanf(\"%f\", element + fi);\n    }\n\n // find the largest\n    for(fi = 1; fi < n; ++fi)\n    {\n       if(*element < *(element + fi))\n         *element = *(element + fi);\n    }\n\n    printf(\"Largest element = %.2f\", *element);\n\n    return 0;\n} ",
    "Week-12: Programing Assignment-04": "sum.feet=d1.feet+d2.feet;\n    sum.inch=d1.inch+d2.inch;\n \n    if (sum.inch >= 12+1-1)\n    {\n        sum.inch=sum.inch-12;\n        ++sum.feet;\n    }\n "
  }
]
