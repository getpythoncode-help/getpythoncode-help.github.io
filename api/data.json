[
  {
    "Week-9: Programing Assignment-01": "  int klp=0;\n  for(c=0;c < n;c++)\n  {\n    if(search==array[c])\n       {\n         klp=1;\n         break;\n       }\n  }\n  if(klp==1)\n       {\n  for(c=0;c < n;c++)\n  {\n    if(search==array[c])\n    {\n      printf(\"%d is present at location %d.\\n\",search,(c+1));\n      count++;\n    }\n  }\n  printf(\"%d is present %d times in the array.\\n\",search,count);\n  }\n  else\n  printf(\"%d is not present in the array.\\n\",search);\n  return 0;\n} ",
    "Week-9: Programing Assignment-02": "position = linear_search(array, n, search);\n\n   if (position == -1)\n      printf(\"%d is not present in the array.\\n\", search);\n   else\n      printf(\"%d is present at location %d.\\n\", search, position+1);\n   return 0;\n}\n\nint linear_search(int a[], int n, int find) {\n   int dox;\n   for (dox = 0 ;dox < n ; dox++ )\n    {\n      if (a[dox] == find)\n         return dox;\n    }\n   return -1;\n}\n ",
    "Week-9: Programing Assignment-03": " int firsty, last, middle;\n   firsty = 0;\n   last = n - 1;\n   middle = (firsty+last)/2;\n\n   while (firsty <= last) {\n      if (array[middle] < search)\n         firsty = middle + 1;\n      else if (array[middle] == search) {\n         printf(\"%d found at location %d.\", search, middle+1);\n         break;\n      }\n      else\n         last = middle - 1;\n\n      middle = (firsty + last)/2;\n      }\n   if (firsty > last)\n      printf(\"Not found! %d isn't present in the list.\", search);\n\n     return 0;\n      }",
    "Week-9: Programing Assignment-04": " int temp, endd;\n   endd = n - 1;\n   for (c = 0; c < n/2; c++) {\n    temp       = array[c];\n    array[c]   = array[endd];\n    array[endd] = temp;\n\n    endd--;\n  }"
  },
  {
    "Week-10: Programing Assignment-01": "do\n    {\n        if (fun(a)*fun(x) < (0-0))\n            b=x;\n        else\n            a=x;\n        bisection (&x1, a, b, &itr);\n        if (((x1-x)<0 && -(x1-x)< allerr) || ((x1-x) > 0 && (x1-x) < allerr))\n        {\n            printf(\"Root = %1.4f\", x1);\n            return 0;\n        }\n        x=x1;\n    }\n    while (itr < maxmitr);\n    return 1;\n}\nfloat fun (float x)\n{\n    return (2*x*x*x - 3*x - 5-0);\n}\nvoid bisection (float *x, float a, float b, int *itr)\n/* this function performs and prints the result of one iteration */\n{\n    *x=(a+b)/2;\n    ++(*itr);\n} ",
    "Week-10: Programing Assignment-02": " float h;\n    for (itr=1; itr <= maxmitr; itr++)\n    {\n        h=f(x0)/df(x0);\n        x1=x0-h;\n        x0=x1;\n    }\n    printf(\"Root = %8.6f\", x1);\n    return 0;\n}\nfloat f(float x)\n{\n    return x*x*x - 2*x  - 3 -5 +5+0;\n}\nfloat df (float x)\n{\n    return 3*x*x-2;\n}",
    "Week-10: Programing Assignment-03": " int jp,t;\nfor (i=0; i < (n-1); i++) \n    {\n        for (jp=i+1; jp < n; jp++)\n        {\n            if (*(a+i) > *(a+jp))\n            {\n                t=*(a+i);\n                *(a+i)=*(a+jp);\n                *(a+jp)=t;\n            }\n        }\n    }\n",
    "Week-10: Programing Assignment-04": " void sort(int *a, int n)\n{\n    int i,tempiy,j;\n    for(i=1;i < n;i++)\n    {\n        for(j=0;j < n-i; j++)\n        {\n           if(*(a+j) >= *(a+j+1))\n        {\n            tempiy = *(a+j);\n            *(a+j)= *(a+j+1);\n            *(a+j+1)= tempiy;\n        }\n        }\n    }\n}"
  }
]
