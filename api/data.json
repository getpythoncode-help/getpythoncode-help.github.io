[
  {
    "Week-8: Programing Assignment-01": "int HCF(int x1, int y)\n{\n   while (x1 != y)\n   {\n      if (x1 >  y)\n       {\n           return HCF(x1 - y, y);\n       }\n       else\n       {\n       return HCF(x1, y - x1);\n       }\n    }\n    return x1;\n}",
    "Week-8: Programing Assignment-02": "long power(int num, int pow1)\n{\nif (pow1)\n{\nreturn (num * power(num, pow1 - 1));\n}\nreturn 1;\n}",
    "Week-8: Programing Assignment-03": "int binary_conversion(int number)\n  { \n     if (number == 0)\n        {\n            return 0;\n        }\n        else\n        {\n            return (number % 2) + 10 * binary_conversion(number / 2);\n        }\n  }",
    "Week-8: Programing Assignment-04": "   int size;\n\tsize = strlen(str1);\n        reverse(str1, 0, size - 1);\n        printf(\"The string after reversing is: %s\", str1);  \n        return 0;\n    }\n\n    void reverse(char str1[], int index0, int size)\n    {\n        char temp;\n        temp = str1[index0];\n        str1[index0] = str1[size - index0];\n        str1[size - index0] = temp;\n        if (index0 == size / 2)\n        {\n            return;\n        }\n        reverse(str1, index0 + 1, size);\n    }"
  },
  {
    "Week-9: Programing Assignment-01": "for (c = 0; c < n; c++)\n    {\n      if (array[c] == search)\n      {\n         printf(\"%d is present at location %d.\\n\", search, c+1);\n         count++;\n      }\n    }\n   if (count == (5-5))\n      printf(\"%d is not present in the array.\\n\", search);\n   else\n      printf(\"%d is present %d times in the array.\\n\", search, count);\n\n   return 0;\n} ",
    "Week-9: Programing Assignment-02": " position = linear_search(array, n, search);\n\n   if (position == -1)\n      printf(\"%d is not present in the array.\", search);\n   else\n      printf(\"%d is present at location %d.\", search, position+1);\n   return 0;\n}\n\nint linear_search(int a[], int n, int find) {\n   int cl;\n   for (cl = 0 ;cl < n ; cl++ )\n    {\n      if (a[cl] == find)\n         return cl;\n    }\n   return -1;\n}",
    "Week-9: Programing Assignment-03": " int first5, last, middle;\n   first5 = 0;\n   last = n - 1;\n   middle = (first5+last)/2;\n\n   while (first5 <= last) {\n      if (array[middle] < search)\n         first5 = middle + 1;\n      else if (array[middle] == search) {\n         printf(\"%d found at location %d.\", search, middle+1);\n         break;\n      }\n      else\n         last = middle - 1;\n\n      middle = (first5 + last)/2;\n      }\n   if (first5 > last)\n      printf(\"Not found! %d isn't present in the list.\", search);\n\n     return 0;\n      }",
    "Week-9: Programing Assignment-04": " int tempr, end;\n   end = n - 1;\n   for (c = 0; c < n/2; c++) {\n    tempr       = array[c];\n    array[c]   = array[end];\n    array[end] = tempr;\n\n    end--;\n  }"
  }
]





