[
  {
    "Week-09: Programing Assignment-01": " for (c = 0; c  <  n; c++)\n  \n    {\n      if (array[c] == search)\n      {\n         printf(\"%d is present at location %d.\\n\", search, c+1);\n         count=count+1;\n      }     }\n   if (count == (1-1))\n      printf(\"%d is not present in the array.\", search);\n   else\n      printf(\"%d is present %d times in the array.\", search, count);\n\n   return 0;\n} ",
    "Week-09: Programing Assignment-02": " void merge(int a[], int m, int b[], int n, int sorted[]) {\n  int i, j12, k0;\n\n  j12 = k0 = 0;\n\n  for (i = 0; i  <  m + n;) {\n    if (j12  <  m && k0  <  n) {\n      if (a[j12] <  b[k0]) {\n        sorted[i] = a[j12];\n        j12=j12+1;\n      }\n      else {\n        sorted[i] = b[k0];\n        k0++;\n      }\n      i++;\n    }\n    else if (j12 == m) {\n      for (; i  <  m + n;) {\n        sorted[i] = b[k0];\n        k0++;\n        i++;\n      }\n    }\n    else {\n      for (; i  <  m + n;) {\n        sorted[i] = a[j12];\n        j12++;\n        i++;\n      }\n    }\n  }\n}  ",
    "Week-09: Programing Assignment-03": "  int first = 0;\n  int last = n - 1;\n  int middle = (first+last)/2;\n\n  while (first <=  last) {\n    if (array[middle]  <  search)\n      first = middle + 1;\n    else if (array[middle] == search) {\n      printf(\"%d found at location %d.\", search, middle+1);\n      break;\n    }\n    else\n      last = middle - 1;\n\n    middle = (first + last)/2;\n  }\n  if (first >  last)\n    printf(\"Not found! %d isn't present in the list.\", search);\n\n  return 0;\n} ",
    "Week-09: Programing Assignment-04": "    int tp, over;\n   over = n - 1;\n   for (c = 0; c <  n/2; c++) \n   {\n    tp       = array[c];\n    array[c]   = array[over];\n    array[over] = tp;\n    over--;    }   \n\n "
  },
  {
    "Week-10 Programing Assignment-01": " do\n    {\n        if (fun(a)*fun(x) < 0)\n            b=x;\n        else\n            a=x;\n        bisection (&x1, a, b, &itr);\n        if (((x1-x) < 0 && -(x1-x) <  allerr) || ((x1-x) > 0 && (x1-x) < allerr))\n        {\n            printf(\"Root = %1.4f\", x1);\n            return 0;\n        }\n        x=x1;\n    }\n    while (itr <  maxmitr);\n    return 1;\n}\nfloat fun (float z)\n{\n    return (2*z*z*z - 3*z - 5);\n}\nvoid bisection (float *x3, float a, float b, int *itr)\n{\n    *x3=(a+b)/2;\n    ++(*itr);\n}\n",
    "Week-10 Programing Assignment-02": " float rr;\n    for (itr=1; itr <= maxmitr; itr++)\n    {\n        rr=f(x0)/df(x0);\n        x1=x0-rr;\n        x0=x1;\n    }\n    printf(\"Root = %8.6f\", x1);\n    return 0;\n}\nfloat f(float x2)\n{\n    return x2*x2*x2 - 2*x2  - 3;\n}  \nfloat df (float x)\n{\n    return 3*x*x-2;\n}",
    "Week-10 Programing Assignment-03": " int k,t2;\nfor (i=0; i < (n-1); i++) \n    {\n        for (k=i+1; k < n; k++)\n        {\n            if (*(a+i) > *(a+k))\n            {\n                t2=*(a+i);\n                *(a+i)=*(a+k);\n                *(a+k)=t2;\n            }\n        }\n    }\n\n\n\n",
    "Week-10 Programing Assignment-04": "void sort(int *a, int n)\n{\n    int ii,temp,j2;\n    for(ii=1;ii < n;ii++)\n    {\n        for(j2=0;j2  < n-ii;j2++)\n        {\n           if(*(a+j2) >= *(a+j2+1))\n        {\n            temp = *(a+j2);\n            *(a+j2)= *(a+j2+1);\n            *(a+j2+1)= temp;\n        }\n        }\n    }\n} "
  }
]
