[
  {
    "Week-9: Programing Assignment-01": "  int klp=0;\n  for(c=0;c < n;c++)\n  {\n    if(search==array[c])\n       {\n         klp=1;\n         break;\n       }\n  }\n  if(klp==1)\n       {\n  for(c=0;c < n;c++)\n  {\n    if(search==array[c])\n    {\n      printf(\"%d is present at location %d.\\n\",search,(c+1));\n      count++;\n    }\n  }\n  printf(\"%d is present %d times in the array.\\n\",search,count);\n  }\n  else\n  printf(\"%d is not present in the array.\\n\",search);\n  return 0;\n} ",
    "Week-9: Programing Assignment-02": "position = linear_search(array, n, search);\n\n   if (position == -1)\n      printf(\"%d is not present in the array.\\n\", search);\n   else\n      printf(\"%d is present at location %d.\\n\", search, position+1);\n   return 0;\n}\n\nint linear_search(int a[], int n, int find) {\n   int dox;\n   for (dox = 0 ;dox < n ; dox++ )\n    {\n      if (a[dox] == find)\n         return dox;\n    }\n   return -1;\n}\n ",
    "Week-9: Programing Assignment-03": " int firsty, last, middle;\n   firsty = 0;\n   last = n - 1;\n   middle = (firsty+last)/2;\n\n   while (firsty <= last) {\n      if (array[middle] < search)\n         firsty = middle + 1;\n      else if (array[middle] == search) {\n         printf(\"%d found at location %d.\", search, middle+1);\n         break;\n      }\n      else\n         last = middle - 1;\n\n      middle = (firsty + last)/2;\n      }\n   if (firsty > last)\n      printf(\"Not found! %d isn't present in the list.\", search);\n\n     return 0;\n      }",
    "Week-9: Programing Assignment-04": " int temp, endd;\n   endd = n - 1;\n   for (c = 0; c < n/2; c++) {\n    temp       = array[c];\n    array[c]   = array[endd];\n    array[endd] = temp;\n\n    endd--;\n  }"
  },
  {
    "Week-8: Programing Assignment-01": "int HCF(int x1, int yy)\n{\n   while (x1 != yy)\n   {\n      if (x1 > yy)\n       {\n           return HCF(x1 - yy, yy);\n       }\n       else\n       {\n       return HCF(x1, yy - x1);\n       }\n    }\n    return x1;\n} ",
    "Week-8: Programing Assignment-02": "long power(int numb, int pow)\n{\n  if (pow)\n  {\n    return (numb * power(numb, pow - 1));\n  }\n  return 1;\n}\n\n ",
    "Week-8: Programing Assignment-03": "int binary_conversion(int ng)\n  { \n     if (ng == 0)\n        {\n            return 0;\n        }\n        else\n        {\n            return (ng % 2) + 10 * binary_conversion(ng / 2);\n        }\n  }\n ",
    "Week-8: Programing Assignment-04": "   int sz;\n\tsz = strlen(str1);\n        reverse(str1, 0, sz - 1);\n        printf(\"The string after reversing is: %s\", str1);  \n        return 0;\n    }\n\n    void reverse(char str1[], int index0, int sz)\n    {\n        char temp;\n        temp = str1[index0];\n        str1[index0] = str1[sz - index0];\n        str1[sz - index0] = temp;\n        if (index0 == sz / 2)\n        {\n            return;\n        }\n        reverse(str1, index0 + 1, sz);\n    } "
  }
]
