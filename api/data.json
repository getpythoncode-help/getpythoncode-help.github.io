[
  {
    "Week-09: Programing Assignment-01": " for (c = 0; c  <  n; c++)\n  \n    {\n      if (array[c] == search)\n      {\n         printf(\"%d is present at location %d.\\n\", search, c+1);\n         count=count+1;\n      }     }\n   if (count == (1-1))\n      printf(\"%d is not present in the array.\", search);\n   else\n      printf(\"%d is present %d times in the array.\", search, count);\n\n   return 0;\n} ",
    "Week-09: Programing Assignment-02": " void merge(int a[], int m, int b[], int n, int sorted[]) {\n  int i, j12, k0;\n\n  j12 = k0 = 0;\n\n  for (i = 0; i  <  m + n;) {\n    if (j12  <  m && k0  <  n) {\n      if (a[j12] <  b[k0]) {\n        sorted[i] = a[j12];\n        j12=j12+1;\n      }\n      else {\n        sorted[i] = b[k0];\n        k0++;\n      }\n      i++;\n    }\n    else if (j12 == m) {\n      for (; i  <  m + n;) {\n        sorted[i] = b[k0];\n        k0++;\n        i++;\n      }\n    }\n    else {\n      for (; i  <  m + n;) {\n        sorted[i] = a[j12];\n        j12++;\n        i++;\n      }\n    }\n  }\n}  ",
    "Week-09: Programing Assignment-03": "  int first = 0;\n  int last = n - 1;\n  int middle = (first+last)/2;\n\n  while (first <=  last) {\n    if (array[middle]  <  search)\n      first = middle + 1;\n    else if (array[middle] == search) {\n      printf(\"%d found at location %d.\", search, middle+1);\n      break;\n    }\n    else\n      last = middle - 1;\n\n    middle = (first + last)/2;\n  }\n  if (first >  last)\n    printf(\"Not found! %d isn't present in the list.\", search);\n\n  return 0;\n} ",
    "Week-09: Programing Assignment-04": "    int tp, over;\n   over = n - 1;\n   for (c = 0; c <  n/2; c++) \n   {\n    tp       = array[c];\n    array[c]   = array[over];\n    array[over] = tp;\n    over--;    }   \n\n "
  },
  {
    "Week-08 Programing Assignment-01": "int HCF(int p, int q)\n{\n   while (p != q)\n   { \n      if (p  >  q)\n       {\n           return HCF(p - q, q);\n       }\n       else\n       {\n       return HCF(p, q - p);\n       }\n    }\n    return(p); \n}\n",
    "Week-08 Programing Assignment-02": "long power(int n, int p)\n{\nif (p)\n{\nreturn (n * power(n, p - 1));\n}\nreturn(1);\n}",
    "Week-08 Programing Assignment-03": "int binary_conversion(int number3)\n  { \n     if (number3 == 0)\n        {\n            return 0;\n        }\n        else\n        {\n            return (number3 % 2) + 10 * binary_conversion(number3 / 2);\n        }\n  }",
    "Week-08 Programing Assignment-04": "int q, t;\nint num = 2;\nfor (q = 0; q < lines; q++) \n{\n      \n   for (t = 0; t <= q; t++)\n   {\n      while (!prime(num))  \n      {\n         num++;\n      }\n         printf(\"%d\\t\", num++);  \n      }\n      printf(\"\\n\");\n   }\n   return (0);\n}  \n \nint prime(int num) \n{\n   int q, flag;\n   for (q = 2; q < num; q++)\n   {\n      if (num % q != 0)\n         flag = 1;\n      else {\n         flag = 0;\n         break;\n      }\n   }\n \n   if (flag == 1 || num == 2)\n      return (1);\n   else\n      return (0);\n}  "
  }
]
