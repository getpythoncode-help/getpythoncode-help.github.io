[
  {
    "Java week 6 Question 1 code": "//Week 6 Q\npublic class W06_P1 extends Thread{\n\tpublic void run(){\n\t\tSystem.out.print(\"Thread is Running.\");\n\t}\n ",
    "Java week 6 Question 2 code": " public class W06_P2 {\n    public static void main(String[] args) {\n        // Create an instance of ThreadRun\n        ThreadRun threadRun = new ThreadRun();\n        \n        //done  Create a Thread object and pass the Runnable object\n        Thread thread = new Thread(threadRun);\n        \n        // Start the thread ok \n        thread.start();\n    }\n}",
    "Java week 6 Question 3 code": "  class MyThread extends B\n \n {\n\t\n\t  public void run() \n    {\n \t\tSystem.out.print(\"NPTEL Java\");\n        //priting message here ok \n\t}\n }\n",
    "Java week 6 Question 4 code": " //Just add synchronized keYword as shown BELOW\nsynchronized void print(int n){\n   for(int i=1;i <= 5;i++){  \n     System.out.println(n*i);  \n     try{  \n      Thread.sleep(400);  \n     }catch(Exception e){\n        System.out.println(e);\n     }  \n   }\n }",
    "Java week 6 Question 5 code": " // Write the necessary code below...\n\n// started the thread  \n  t.start();  \n// setting the name setName ....\n  t.setName(\"NPTEL\");"

  },
  {
    "Java week 2 Question 1 code": "// Create a Student object and call displayInfo\n// Add the necessary code in the spaces below \n//done enjoy\n\n\n//code to create student object \nStudent student = new Student(name,age,grade);\n\n//code to call displayInfo function\nstudent.displayInfo(); ",
    "Java week 2 Question 2 code": "// Write the appropriate constructor call code in the given spaces .\n//Good luck\n\nif (grade == null ||grade.isEmpty()) {\n    student = new Student(name,age);  // Add your code to call the constructor when grade is not given in input\n} else {\n    student = new Student(name,age,grade);  // Add your code to call the constructor when grade is given in input\n}\n\n// code to call displayInfo function to display the information\nstudent.displayInfo();  // Call the displayInfo method to display the student's information ",
    "Java week 2 Question 3 code": " // Define the class Rectangle here\n// Use the this keyword in the constructor\n// Define the area method\n\nclass Rectangle {\n    int length, breadth;\n\n    // Constructor\n    Rectangle(int length, int breadth) {\n        this.length = length; \n        this.breadth = breadth;\n    }\n\n    // Method to calculate area\n     int area() {\n        return length * breadth; //write the correct formula\n    }\n}\n\n//I hope it will work",
    "Java week 2 Question 4 code": "// Define the class Car here\n// Write a constructor and a display method\n//ok\n\nclass Car {\n    //variables \n    String brand;\n    int price;\n\n    // Constructor\n    Car(String brand,int price) {\n        this.brand=brand;\n        this.price=price;\n    }\n\n    // Display method\n    void display(int num) {\n        System.out.println(\"Car \" + num + \": \" + brand + \", Price: \" + price);\n    }\n}  ",
    "Java week 2 Question 5 code": " //Let us see\n\n\nclass Book {\n    // Private attributes\n    private String title;\n    private String author;\n    \n    // Setter for title\n    public void setTitle(String title) {\n        this.title = title;\n    }\n    \n    // Setter for author\n    public void setAuthor(String author) {\n        this.author=author;\n    }\n    \n    // Getter for title\n    public String getTitle() {\n        return this.title;\n    }\n    \n    // Getter for author\n    public String getAuthor() {\n        return this.author;\n    }"
  },
  {
    "Java week 7 Question 1 code": "// Constructor to initialize numbers see it\n    public W07_1(int num1, int num2) {\n        this.num1 = num1;\n        this.num2 = num2;\n    }\n\n    // Method for addition done\n    public int add() {\n        return num1 + num2;\n    }\n\n    // Method for subtraction\n    public int subtract() {\n        return num1 - num2;\n    }\n\n    // Method for multiplication see\n    public int multiply() {\n        return num1 * num2;\n    }\n\n    // Method for division with zero handling ok\n    public int divide() {\n        if (num2 == 0) {\n            System.out.println(\"Cannot divide by zero!\");\n            return 0; // Default return value\n        }\n        return num1 / num2;\n    }\n ",
    "Java week 7 Question 2 code": " // Constructor initializing count to zero\n    public Counter() {\n        this.count = 0;\n    }\n\n    // Method to increment count\n    public void increment() {\n        count++;\n    }\n\n    // Method to decrement count but ensure it does not go below zero\n    public void decrement() {\n        if (count > 0) {\n            count--;\n        }\n    }\n\n    // Method to get the current value of count\n    public int getValue() {\n        return count;\n    }\n\n",
    "Java week 7 Question 3 code": "   // Constructor to initialize name and salary ok sre\n    public Employee(String name, double salary) {\n        this.name = name;\n        this.salary = salary;\n    }\n\n    // Method to return employee details in the required format\n    public String getDetails() {\n        return \"Employee: \" + name + \", Salary: \" + salary;\n    }\n\n} ",
    "Java week 7 Question 4 code": "    // Method to return the largest number in the array\n    public int getMax() {\n        int max = numbers[0]; // Assume first element is the largest\n        for (int num : numbers) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max;\n    }\n\n    // Method to return the smallest number in the  ans\n    public int getMin() {\n        int min = numbers[0]; // Assume first element is the smallest\n        for (int num : numbers) {\n            if (num < min) {\n                min = num;\n            }\n        }\n        return min;\n    }\n}\n ",
    "Java week 7 Question 5 code": "    // Method to check password validity\n    public boolean isValidPassword(String password) {\n        if (password.length() < 8) {\n            return false;\n        }\n\n        boolean hasUpperCase = false;\n        boolean hasDigit = false;\n\n        for (char ch : password.toCharArray()) {\n            if (Character.isUpperCase(ch)) {\n                hasUpperCase = true;\n            }\n            if (Character.isDigit(ch)) {\n                hasDigit = true;\n            }\n            if (hasUpperCase && hasDigit) {\n                return true;\n            }\n        }\n\n        return false;\n    } "
  }

]
